package model.bean;
// Generated 18-nov-2016 19:09:37 by Hibernate Tools 4.3.1

import java.beans.Transient;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import util.BeanValidator;
import util.enums.ManualState;
import util.enums.ManualVisibility;
import util.exceptions.BeanException;

/**
 * Manual generated by hbm2java
 */
@Entity
@Table(name = "manual",
         catalog = "testfield"
)
public class Manual implements java.io.Serializable {

    private String id;
    private Date dateCreation;
    private Date dateLastMod;
    private Set<ManualPage> manualPages = new HashSet<>(0);
    private int stateCurrent;
    private Set<Tag> tags = new HashSet<>(0);
    private String title;
    private String userNick;
    private int visibility;

    public Manual() {
    }

    public Manual(Date dateCreation, Date dateLastMod, int stateCurrent, String title, String userNick, int visibility) {
        this.dateCreation = dateCreation;
        this.dateLastMod = dateLastMod;
        this.stateCurrent = stateCurrent;
        this.title = title;
        this.userNick = userNick;
        this.visibility = visibility;
    }

    public Manual(Date dateCreation, Date dateLastMod, Set<ManualPage> manualPages, int stateCurrent, Set<Tag> tags, String title, String userNick, int visibility) {
        this.dateCreation = dateCreation;
        this.dateLastMod = dateLastMod;
        this.manualPages = manualPages;
        this.stateCurrent = stateCurrent;
        this.tags = tags;
        this.title = title;
        this.userNick = userNick;
        this.visibility = visibility;
    }

    @GenericGenerator(name = "generator", strategy = "uuid2")
    @Id
    @GeneratedValue(generator = "generator")

    @Column(name = "ID", unique = true, nullable = false, length = 60)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DATE_CREATION", nullable = false, length = 19)
    public Date getDateCreation() {
        return this.dateCreation;
    }

    public void setDateCreation(Date dateCreation) {
        this.dateCreation = dateCreation;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DATE_LAST_MOD", nullable = false, length = 19)
    public Date getDateLastMod() {
        return this.dateLastMod;
    }

    public void setDateLastMod(Date dateLastMod) {
        this.dateLastMod = dateLastMod;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "manual")
    public Set<ManualPage> getManualPages() {
        return this.manualPages;
    }

    public void setManualPages(Set<ManualPage> manualPages) {
        this.manualPages = manualPages;
    }

    @Column(name = "STATE_CURRENT", nullable = false)
    public int getStateCurrent() {
        return this.stateCurrent;
    }

    public void setStateCurrent(int stateCurrent) {
        this.stateCurrent = stateCurrent;
    }

    @Transient
    public void setStateCurrent(ManualState state) {
        this.stateCurrent = state.getValue();
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "rel_tag_manual", catalog = "testfield", joinColumns = {
        @JoinColumn(name = "MANUAL", nullable = false, updatable = false)}, inverseJoinColumns = {
        @JoinColumn(name = "TAG", nullable = false, updatable = false)})
    public Set<Tag> getTags() {
        return this.tags;
    }

    public void setTags(Set<Tag> tags) {
        this.tags = tags;
    }

    @Column(name = "TITLE", nullable = false)
    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) throws BeanException {
        BeanValidator.validateLength(title, 255, "Title");
        this.title = title;
    }

    @Column(name = "USER_NICK", nullable = false, length = 30)
    public String getUserNick() {
        return this.userNick;
    }

    public void setUserNick(String userNick) throws BeanException {
        BeanValidator.validateLength(userNick, 30, "User");
        this.userNick = userNick;
    }

    @Column(name = "VISIBILITY", nullable = false)
    public int getVisibility() {
        return this.visibility;
    }

    public void setVisibility(int visibility) {
        this.visibility = visibility;
    }

    @Transient
    public void setVisibility(ManualVisibility visibility) {
        this.visibility = visibility.getValue();
    }

}
