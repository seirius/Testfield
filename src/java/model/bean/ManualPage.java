package model.bean;
// Generated 10-nov-2016 22:20:57 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;

/**
 * ManualPage generated by hbm2java
 */
@Entity
@Table(name = "manual_page",
         catalog = "testfield"
)
public class ManualPage implements java.io.Serializable {

    private String id;
    @JsonBackReference
    private Manual manual;
    private int order;
    @JsonManagedReference
    private Set<ManualRow> manualRows = new HashSet<ManualRow>(0);

    public ManualPage() {
    }

    public ManualPage(String id, Manual manual) {
        this.id = id;
        this.manual = manual;
    }

    public ManualPage(String id, Manual manual, Set<ManualRow> manualRows) {
        this.id = id;
        this.manual = manual;
        this.manualRows = manualRows;
    }

    @Id

    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Column(name = "ID", unique = true, nullable = false, length = 60)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MANUAL", nullable = false)
    public Manual getManual() {
        return this.manual;
    }

    public void setManual(Manual manual) {
        this.manual = manual;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "manualPage")
    public Set<ManualRow> getManualRows() {
        return this.manualRows;
    }

    public void setManualRows(Set<ManualRow> manualRows) {
        this.manualRows = manualRows;
    }
    
    @Column(name = "PAGE_ORDER", nullable = false)
    public int getOrder() {
        return this.order;
    }
    
    public void setOrder(int order) {
        this.order = order;
    }

}
