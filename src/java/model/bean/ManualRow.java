package model.bean;
// Generated 10-nov-2016 22:20:57 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;

/**
 * ManualRow generated by hbm2java
 */
@Entity
@Table(name = "manual_row",
         catalog = "testfield"
)
public class ManualRow implements java.io.Serializable {

    private String id;
    @JsonBackReference
    private ManualPage manualPage;
    private int order;
    @JsonManagedReference
    private Set<ManualBlock> manualBlocks = new HashSet<ManualBlock>(0);

    public ManualRow() {
    }

    public ManualRow(String id, ManualPage manualPage) {
        this.id = id;
        this.manualPage = manualPage;
    }

    public ManualRow(String id, ManualPage manualPage, Set<ManualBlock> manualBlocks) {
        this.id = id;
        this.manualPage = manualPage;
        this.manualBlocks = manualBlocks;
    }

    @Id
    
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Column(name = "ID", unique = true, nullable = false, length = 60)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MANUAL_PAGE", nullable = false)
    public ManualPage getManualPage() {
        return this.manualPage;
    }

    public void setManualPage(ManualPage manualPage) {
        this.manualPage = manualPage;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "manualRow")
    public Set<ManualBlock> getManualBlocks() {
        return this.manualBlocks;
    }

    public void setManualBlocks(Set<ManualBlock> manualBlocks) {
        this.manualBlocks = manualBlocks;
    }
    
    @Column(name = "ROW_ORDER", nullable = false)
    public int getOrder() {
        return this.order;
    }
    
    public void setOrder(int order) {
        this.order = order;
    }

}
