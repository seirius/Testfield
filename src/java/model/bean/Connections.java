package model.bean;
// Generated 03-ago-2016 18:40:01 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.UUID;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Connections generated by hbm2java
 */
@Entity
@Table(name = "connections", catalog = "testfield"
)
public class Connections implements java.io.Serializable {

    private ConnectionsId id;
    private UserTestfield userTestfield;
    private Date lastTime;

    public Connections() {
    }

    public Connections(String user) {
        String token = UUID.randomUUID().toString();
        id = new ConnectionsId(token, user);
        userTestfield = new UserTestfield(user);
        lastTime = new Date();
    }
    
    public Connections(String user, String token) {
        this.id = new ConnectionsId(token, user);
        this.userTestfield = new UserTestfield(user);
    }

    public Connections(ConnectionsId id, UserTestfield userTestfield, Date lastTime) {
        this.id = id;
        this.userTestfield = userTestfield;
        this.lastTime = lastTime;
    }

    @EmbeddedId

    @AttributeOverrides({
        @AttributeOverride(name = "token", column = @Column(name = "TOKEN", nullable = false)),
        @AttributeOverride(name = "userNick", column = @Column(name = "USER_NICK", nullable = false, length = 20))})
    public ConnectionsId getId() {
        return this.id;
    }

    public void setId(ConnectionsId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "USER_NICK", nullable = false, insertable = false, updatable = false)
    public UserTestfield getUserTestfield() {
        return this.userTestfield;
    }

    public void setUserTestfield(UserTestfield userTestfield) {
        this.userTestfield = userTestfield;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "LAST_TIME", nullable = false, length = 19)
    public Date getLastTime() {
        return this.lastTime;
    }

    public void setLastTime(Date lastTime) {
        this.lastTime = lastTime;
    }

}
