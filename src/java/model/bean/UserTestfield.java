package model.bean;
// Generated 06-nov-2016 19:31:10 by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import util.exceptions.BeanException;

/**
 * UserTestfield generated by hbm2java
 */
@Entity
@Table(name = "user_testfield",
         catalog = "testfield"
)
public class UserTestfield implements java.io.Serializable {

    private String userNick;
    private Date dateCreation = new Date();
    private String password;

    public UserTestfield() {
    }
    
    public UserTestfield(String userNick, Date dateCreation, String password) {
        this.userNick = userNick;
        this.dateCreation = dateCreation;
        this.password = password;
    }

    @Id

    @Column(name = "USER_NICK", unique = true, nullable = false, length = 30)
    public String getUserNick() {
        return this.userNick;
    }

    public void setUserNick(String userNick) throws BeanException {
        if (userNick.length() > 30) {
            throw new BeanException("User's length can't be more than 30 characters");
        }
        this.userNick = userNick;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DATE_CREATION", nullable = false, length = 19)
    public Date getDateCreation() {
        return this.dateCreation;
    }

    public void setDateCreation(Date dateCreation) {
        this.dateCreation = dateCreation;
    }

    @Column(name = "PASSWORD", nullable = false, length = 30)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) throws BeanException {
        if (password.length() > 30) {
            throw new BeanException("Password's length can't be more than 30 characters");
        }
        this.password = password;
    }

}
